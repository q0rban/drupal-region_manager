<?php
// $Id: region_manager.module,v 1.2 2010/02/09 00:13:20 q0rban Exp $

/**
 * @file Region Manager Module.
 *
 * Built by Sprocket.
 * http://sprocketcreative.com
 */

/**
 * Define constant module permission states.
 */
define('REGION_MANAGER_ALL_ENABLED', 0);
define('REGION_MANAGER_ALL_DISABLED', 1);
define('REGION_MANAGER_CUSTOM', 2);

/**
 * Define storage methods.
 */
// Stored in the db.
define('REGION_MANAGER_STORAGE_NORMAL', 0);
// Stored in hook_region_manager_defaults().
define('REGION_MANAGER_STORAGE_DEFAULT', 1);
// Stored in hook_region_manager_defaults(), but overridden in the db.
define('REGION_MANAGER_STORAGE_OVERRIDE', 2);

/**
 * Include some files right away.
 */
// Include Region Manager's API and helper functions.
module_load_include('inc', 'region_manager', 'region_manager');
// Include NodeBlock helpers.
module_load_include('inc', 'region_manager', 'region_manager.nodeblock');

/**
 * Implementation of hook_help().
 */
function region_manager_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/region_manager/regions':
      return t('Please select for each theme which regions you would like to have region manager available on.');

    case 'admin/build/region_manager/%/%':
      $theme_key = $arg[3];
      $region = $arg[4];
      $path = _region_manager_path_name($_REQUEST['destination']);

      $t_args = array(
        '@region' => region_manager_region_title($theme_key, $region),
        '%path' => _region_manager_path_name($path),
        '@block' => _region_manager_block_name(),
      );

      return t('You are managing the @region as it displays on %path. Add existing, create new, remove, disable @blocks, or drag and drop to reorder them.', $t_args);
  }
}

/**
 * Implementation of hook_init().
 */
function region_manager_init() {
  if (user_access('manage regions')) {
    // Add css and js.
    $path = drupal_get_path('module', 'region_manager');
    drupal_add_css($path .'/region_manager.css');
  }
}

/**
 * Implementation of hook_preprocess_page().
 */
function region_manager_preprocess_page(&$vars) {
  if (user_access('manage regions')) {
    global $theme_key;

    // Add the menus.
    $regions = region_manager_regions_variable_get($theme_key);
    if (!empty($regions)) {
      foreach($regions as $region => $value) {
        if (
          $value && 
          isset($vars[$region]) && // Ensure this theme has the region ($regions may be from a base theme).
          (!function_exists('visibility_api_visible') || visibility_api_visible($theme_key .':'. $region, 'region_manager'))
        ) {
          $vars[$region] = theme('region_manager_region_menu', $theme_key, $region) . $vars[$region];
        }
      }
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function region_manager_menu() {
  $items = array();

  $items['admin/settings/region_manager'] = array(
    'title' => 'Region Manager regions',
    'description' => 'Configure region manager settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('region_manager_settings_form'),
    'access arguments' => array('administer region manager'),
    'file' => 'region_manager.admin.inc',
  );
  $items['admin/settings/region_manager/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/settings/region_manager/regions'] = array(
    'title' => 'Region Manager regions',
    'description' => 'Configure region manager settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('region_manager_regions_form'),
    'access arguments' => array('administer region manager'),
    'file' => 'region_manager.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/region_manager/regions/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );

  if (function_exists('visibility_api_visible')) {
    $items['admin/settings/region_manager/visibility'] = array(
      'title' => 'Visibility',
      'description' => 'Configure visibility',
      'page callback' => 'region_manager_visibility_overview',
      'access arguments' => array('administer region manager'),
      'file' => 'region_manager.admin.inc',
      'type' => MENU_LOCAL_TASK,
    );
    $items['admin/settings/region_manager/visibility/list'] = array(
      'title' => 'List',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => -10,
    );
  }

  foreach(list_themes() as $theme) {
    if ($theme->status) {
      $items['admin/settings/region_manager/regions/'. $theme->name] = array(
        'title' => $theme->info['name'],
        'description' => 'Configure region manager settings',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('region_manager_blocks_form', 4),
        'access arguments' => array('administer region manager'),
        'file' => 'region_manager.admin.inc',
        'type' => MENU_LOCAL_TASK,
      );
      if (function_exists('visibility_api_visible')) {
        $items['admin/settings/region_manager/visibility/'. $theme->name] = array(
          'title' => $theme->info['name'],
          'description' => 'Configure visibility',
          'page callback' => 'drupal_get_form',
          'page arguments' => array('region_manager_visibility_form', 4),
          'access arguments' => array('administer region manager'),
          'file' => 'region_manager.admin.inc',
          'type' => MENU_LOCAL_TASK,
        );
      }
    }
  }
  $items['admin/settings/region_manager/regions/export'] = array(
    'title' => 'Export',
    'description' => 'Configure region manager settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('region_manager_export'),
    'access arguments' => array('administer region manager'),
    'file' => 'region_manager.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 99,
  );

  $items['admin/build/region_manager/%/%'] = array(
    'title callback' => 'region_manager_region_title',
    'title arguments' => array(3, 4),
    'description' => 'Configure Region',
    'page callback' => 'region_manager_manage',
    'page arguments' => array(3, 4),
    'access arguments' => array('manage regions'),
    'file' => 'region_manager.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Title callback for a region manager.
 */
function region_manager_region_title($theme_key, $region) {
  static $list = array();

  $output = '';

  if (!array_key_exists($theme_key, $list)) {
    $info = unserialize(db_result(db_query("SELECT info FROM {system} WHERE type = 'theme' AND name = '%s'", $theme_key)));
    $list[$theme_key] = array_map('t', $info['regions']);
  }

  $output = $list[$theme_key][$region];

  return $output;
}

/**
 * Implementation of hook_perm().
 */
function region_manager_perm() {
  return array('administer region manager', 'manage regions');
}

/**
 * Implementation of hook_theme().
 */
function region_manager_theme() {
  $items = array();

  $items['region_manager_blocks_form'] = array(
    'arguments' => array('form' => array()),
  );
  $items['region_manager_region_menu'] = array(
    'arguments' => array('theme_key' => NULL, 'region' => NULL),
  );
  $items['region_manager_create_menu'] = array(
    'arguments' => array('links' => NULL),
  );
  $items['region_manager_manage_form'] = array(
    'template' => 'region-manager-manage-form',
    'file' => 'region_manager.pages.inc',
    'arguments' => array('form' => NULL),
  );

  return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function region_manager_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($op == 'insert' && $node->region_manager) {
    // Rehash the blocks for this theme key.
    _region_manager_block_rehash($node->region_manager['theme_key']);

    // Set up the path, in case this was a frontpage
    $path = $node->region_manager['path'];
    $frontpage = variable_get('site_frontpage', 'node');
    $node->region_manager['path'] = ($path == $frontpage) ? '<front>' : $path;

    // Insert the block into blocks table.
    db_query("UPDATE {blocks} SET status = 1,  region = '%s', visibility = -1, pages = '%s' WHERE module = '%s' AND delta = '%s' AND theme = '%s'", $node->region_manager['region'], $node->region_manager['path'], $node->region_manager['module'], $node->nid, $node->region_manager['theme_key']);
  }
}

/**
 * Theme function that builds the menu from a set of links.
 *
 * @param $theme_key
 *   A string containing the key for the active theme.
 * @param $region
 *   A string containing the region to be managed.
 * @return
 *   A string containing the link wrapped in a div.
 *
 * @ingroup themable
 */
function theme_region_manager_region_menu($theme_key, $region) {
  $dest = $_REQUEST['destination'] ? array('destination' => $_REQUEST['destination']) : drupal_get_destination();

  $link = l(t(region_manager_region_title($theme_key, $region)), "admin/build/region_manager/$theme_key/$region", array('query' => $dest, 'attributes' => array('title' => t('Manage this region'))));

  return "<div class='region-manager-menu'>$link</div>\n";
}
